stages:
  - build
  - release
  - deploy

before_script:
  - docker version
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-staing:
  stage: build
  only:
    - staging
  script:
    - docker pull $CI_REGISTRY_IMAGE:staging || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:staging --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

build-latest:
  stage: build
  only:
    - main
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

release-staging:
  variables:
    GIT_STRATEGY: none
  stage: release
  only:
    - staging
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:staging
    - docker push $CI_REGISTRY_IMAGE:staging

release-latest:
  variables:
    GIT_STRATEGY: none
  stage: release
  only:
    - main
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

deploy-staging:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  only:
    - staging
  before_script:
    # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
    - eval $(ssh-agent -s)
    # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY_STAG")'
    # tạo folder ~/.ssh
    - mkdir -p ~/.ssh
    # Scan lấy SSH Host key cho địa chỉ IP server
    # Được kết quả bao nhiêu thì thêm vào file known_hosts
    - ssh-keyscan -H $SSH_SERVER_IP_STAG >> ~/.ssh/known_hosts
    # Sửa lại quyền của file known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    # Thực hiện SSH vào server, login vào Registry, chuyển tới folder project
    # Down project, pull image về, up project và xoá đi image cũ
    - >
      ssh $SSH_USER@$SSH_SERVER_IP_STAG
      "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};
      cd ${PATH_TO_PROJECT};
      docker-compose down;
      docker pull ${CI_REGISTRY_IMAGE}:staging;
      docker-compose up -d;
      docker image prune -f;"

deploy-latest:
 stage: deploy
 variables:
   GIT_STRATEGY: none
 only:
   - main
 before_script:
   # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
   - eval $(ssh-agent -s)
   # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
   - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
   # tạo folder ~/.ssh
   - mkdir -p ~/.ssh
   # Scan lấy SSH Host key cho địa chỉ IP server
   # Được kết quả bao nhiêu thì thêm vào file known_hosts
   - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
   # Sửa lại quyền của file known_hosts
   - chmod 644 ~/.ssh/known_hosts
 script:
   # Thực hiện SSH vào server, login vào Registry, chuyển tới folder project
   # Down project, pull image về, up project và xoá đi image cũ
   - >
     ssh $SSH_USER@$SSH_SERVER_IP
     "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY};
     cd ${PATH_TO_PROJECT};
     docker-compose down;
     docker pull ${CI_REGISTRY_IMAGE}:latest;
     docker-compose up -d;
     docker image prune -f;"